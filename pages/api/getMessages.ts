import redis from '@/redis'
import { Message } from '@/typing'
import type { NextApiRequest, NextApiResponse } from 'next'

type Data = {
    messages: Message[];
}

type ErrorData = {
    error: string;
}

export default async function handler(
  req: NextApiRequest,
  res: NextApiResponse<Data | ErrorData>
) {
  if (req.method!== 'GET') {
    res.status(405).json({ error: 'Method not allowed' })
    return
  } 

  //fecth from redis database, we are accessing a hash 
  //(hash is a fixed-length string or sequence of characters that is generated by applying a mathematical function)
  //Redis HVALS command is used to get all values in the hash stored at key.
  const messagesRes = await redis.hvals('messages')
  
  //we have to map and parse each message to JSON as we are receiving stringify data
  const messages: Message[] = messagesRes
    .map((message) => JSON.parse(message))
    .sort((a, b) => b.created_at - a.created_at)


  res.status(200).json({ messages })
}
